// This #include statement was automatically added by the Spark IDE.
#include "NCD32Relay.h"
NCD32Relay relayController;

//Global local variables for on board jumper possitions.
int jumperA1 = 0;
int jumperA2 = 0;

void setup() {
    Serial.begin(115200);
    while(!relayController.initialized){
        relayController.setAddress(jumperA1, jumperA2);
    }
    Serial.println("Controller Ready");
    //Make sure all relays are off initially
    relayController.turnOffAllRelays();
}

void loop() {
    //Run a cool sounding beat while we have communication with the controller.
    while(relayController.initialized){
        //Turn all 32 relays on in sequence
        for(int i = 0; i < 33; i++){
            relayController.turnOnRelay(i);
            delay(20);
        }
        //Turn all 32 relays off in sequence
        for(int i = 32; i > 0; i--){
            relayController.turnOffRelay(i);
            delay(20);
        }
        //Turn on all relays in banks 1-4 in sequence
        for(int i = 0; i < 5; i++){
            relayController.turnOnAllRelays(i);
            delay(100);
        }
        //Turn off all relays in banks 1-4 in sequence
        for(int i = 4; i > 0; i--){
            relayController.turnOffAllRelays(i);
            delay(100);
        }
        //Turn all relays on and off twice.
        for(int i = 0; i < 3; i++){
            relayController.turnOnAllRelays();
            delay(100);
            relayController.turnOffAllRelays();
            delay(100);
        }
        //Toggle all relays(should turn on then off in sequnce)
        for(int i = 0; i < 33; i++){
            relayController.toggleRelay(i);
            delay(20);
            relayController.toggleRelay(i);
            delay(20);
        }

    }
    //If we loose communication with controller try to regain connection repeatedly
    while(!relayController.initialized){
        relayController.setAddress(jumperA1, jumperA2);
    }
    Serial.println("Controller communication recovered");
    
}